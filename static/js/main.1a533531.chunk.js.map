{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Date","getFullYear","cardData","name","description","stack","link","repo","disabled","image","muiTheme","createMuiTheme","palette","primary","main","secondary","text","theme","useStyles","makeStyles","wes","fontFamily","fontWeight","header","margin","spacing","title","flex","nav","cursor","card","height","display","flexDirection","cardContent","flexGrow","footer","padding","Boolean","window","location","hostname","match","ReactDOM","render","classes","ThemeProvider","CssBaseline","Container","maxWidth","className","root","Toolbar","disableGutters","component","Link","href","target","underline","Grid","container","map","item","key","xs","sm","md","Card","elevation","CardContent","gutterBottom","CardActions","Button","size","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a533531.chunk.js","sourcesContent":["import React from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            {new Date().getFullYear()}\n        </Typography>\n    );\n}\n\nconst cardData = [\n    {\n        name : \"POINTS OFFICE\",\n        description : \"Robust, sortable data app to help travel points enthusiasts maximize redemptions\",\n        stack : \"React / Material-UI / CSS-in-JS\",\n        link : \"https://ecomstock.github.io/points-reference/\",\n        repo : \"https://github.com/ecomstock/points-office\",\n        disabled : false\n    },\n    {\n        name : \"SUNBUDDY\",\n        description : \"At-a-glance weather and sun info to optimize outdoor workouts\",\n        stack : \"React / Material-UI / CSS-in-JS\",\n        link : \"https://ecomstock.github.io/sunbuddy/\",\n        repo : \"https://github.com/ecomstock/sunbuddy\",\n        disabled : false\n    },\n    {\n        name : \"FITERA\",\n        description : \"Numerous pages during my role as the front-end dev for a fitnesss and nutrition e-com\",\n        stack : \"jQuery / Bootstrap / Sass / PHP\",\n        image : \"\",\n        link : \"http://fitera.com\",\n        repo : \"https://\",\n        disabled : false\n    },\n    {\n        name : \"WEST LINN COMMUNITY CHORUS\",\n        description : \"Complete overhaul and site redeployment\",\n        stack : \"jQuery / Bootstrap\",\n        image : \"\",\n        link : \"http://westlinnchorus.org\",\n        repo : \"https://github.com/ecomstock/wlcc\",\n        disabled : false\n    },\n    {\n        name : \"RETIREROO (coming soon)\",\n        description : \"Financial modeling app to project retirement age and account balances over time\",\n        stack : \"React / Material-UI / CSS-in-JS\",\n        image : \"\",\n        link : \"\",\n        repo : \"\",\n        disabled: true\n    },\n    {\n        name : \"SPECIAL WARDS (coming soon)\", // Let's Talk Tokyo, Tokyo Travel Friend, Go Go Tokyo, Special Wards, Tokubetsuku\n        description : \"Survey app with detailed, actionable advice for planning a trip to Tokyo\",\n        stack : \"React / Material-UI / CSS-in-JS\",\n        image : \"\",\n        link : \"\",\n        repo : \"\",\n        disabled: true\n    },\n];\n\nconst muiTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#1a73e8\"\n        },\n        secondary: {\n            main: \"#1e8e3e\"\n        },\n        // background: {\n        //     default: \"#ffffff\"\n        // },\n        text: {\n            primary: \"#3c4043\",\n            secondary: \"#5f6368\"\n        } \n    },\n});\n\nconst theme = {\n    ...muiTheme\n}\n\nconst useStyles = makeStyles(theme => ({\n    // root: {\n    //     marginTop: theme.spacing(3)\n    // },\n    wes: {\n        fontFamily: \"Lato\",\n        fontWeight: 900,\n    },\n    header: {\n        margin: theme.spacing(3, 0, 3, 0),\n    },\n    title: {\n        flex: 1,\n    },\n    nav: {\n        '&:hover,focus': {\n            color: 'black',\n        },\n        cursor: 'pointer',\n        margin: theme.spacing(0, 0, 0, 2),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        padding: theme.spacing(6),\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Container maxWidth=\"md\" className={classes.root}>\n                <Toolbar disableGutters={true} className={classes.header}>\n                    <Typography\n                        className={`${classes.wes} ${classes.title}`}\n                        component=\"h1\"\n                        variant=\"h6\"\n                        color=\"inherit\"\n                        //noWrap\n                    >\n                        WHAT'S NEXT, ERIC?\n                    </Typography>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"button\"\n                        //noWrap\n                        className={`${classes.wes} ${classes.header} ${classes.nav}`}\n                        // onClick={() => handleNavClick('about')} \n                    >\n                        <Link href=\"https://github.com/ecomstock\" target=\"_blank\" color=\"inherit\" underline=\"none\">\n                            GITHUB\n                        </Link>\n                    </Typography>\n                    <Typography\n                        component=\"h2\"\n                        variant=\"button\"\n                        //noWrap\n                        className={`${classes.wes} ${classes.header} ${classes.nav}`}\n                        // onClick={() => handleNavClick('contact')} \n                    >\n                        <Link href=\"mailto:ecomstock@gmail.com\" target=\"_blank\" color=\"inherit\" underline=\"none\">\n                            CONTACT\n                        </Link>\n                    </Typography>\n                </Toolbar>\n                <main>\n                    <Grid container spacing={3}>\n                        {cardData.map(card => (\n                        <Grid item key={card} xs={12} sm={6} md={4}>\n                            <Card className={classes.card} elevation={4}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography gutterBottom variant=\"subtitle1\" component=\"h3\" className={classes.wes}>\n                                        {card.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" gutterBottom>\n                                        {card.description}\n                                    </Typography>\n                                    <Typography variant=\"caption\" color=\"secondary\">\n                                        {card.stack}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <Button size=\"small\" color=\"primary\" disabled={card.disabled}>\n                                        <Link href={card.link} target=\"_blank\" color=\"inherit\" underline=\"none\">\n                                            Site\n                                        </Link>\n                                    </Button>\n                                    <Button size=\"small\" color=\"primary\" disabled={card.disabled}>\n                                        <Link href={card.repo} target=\"_blank\" color=\"inherit\" underline=\"none\">\n                                            Repo\n                                        </Link>\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                        ))}\n                    </Grid>\n                </main>\n                <footer className={classes.footer}>\n                    <Copyright />\n                </footer>\n            </Container>\n        </ThemeProvider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}